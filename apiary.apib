FORMAT: 1A

# SlateMockup

This is the API documentation for the Blackboard Transact Slate project.  The intended audience is for developers in the Phoenix and Brno offices.

# Group Customer
    
## Customer Management [/customer]

### Customer Board Balance Get [GET /customer/{customerId}/device/{deviceId}/board/balance]
+ Attributes
    + customerId: `cccccccc-cccc-cccc-cccc-cccccccccccc` - The unique identifier for the customer (GUID).
    + deviceId: `dddddddd-dddd-dddd-dddd-dddddddddddd` - The unique identifier for the device (GUID).

+ Response 200 (application/json)
    + Headers
    
            Content-Type: application/json; charset=UTF-8
    + Attributes (Customer Board Balance Get Response)

### Customer Stored Value Balance Get [GET /customer/{customerId}/device/{deviceId}/storedvalue/balance]
+ Attributes
    + customerId: `cccccccc-cccc-cccc-cccc-cccccccccccc` - The unique identifier for the customer (GUID).
    + deviceId: `dddddddd-dddd-dddd-dddd-dddddddddddd` - The unique identifier for the device (GUID).

+ Response 200 (application/json)
    + Headers
    
            Content-Type: application/json; charset=UTF-8
    + Attributes (Customer Stored Value Balance Get Response)

### Customer Credential Verify [POST /customer/credential/verify]
+ Request (application/json)
    + Attributes (Customer Credential Verify Request)

+ Response 200 (application/json)
    + Headers
    
            Content-Type: application/json; charset=UTF-8
    + Attributes (Customer Credential Verify Response)
    
+ Response 400 (application/json)
    - Response code 400 is returned if there is a problem with any of the request parameters.
    + Attributes (Response 400 Error)

### Customer Info Get [GET /customer/{id}]
+ Attributes
    + id: `cccccccc-cccc-cccc-cccc-cccccccccccc` - The unique identifier for the customer (GUID).

+ Response 200 (application/json)
    + Headers
    
            Content-Type: application/json; charset=UTF-8
    + Attributes (Customer Get Response)

# Group Device

## Device Operation [/device]

### Device Heartbeat [POST /device/heartbeat]
+ Request (application/json)
    + Attributes (Device Heartbeat Request)
    
+ Response 201 (application/json)
    + Headers
    
            Content-Type: application/json; charset=UTF-8
    + Attributes (Device Heartbeat Response)

+ Response 400 (application/json)
    - Response code 400 is returned if there is a problem with any of the request parameters.
    + Attributes (Response 400 Error)

### Download Device Operators [GET /device/{id}/operators]
+ Attributes
    + id: `ffffffff-ffff-ffff-ffff-ffffffffffff` (string, required) - The unique identifier assigned to the device.

+ Response 200 (application/json)
    + Headers
    
            Content-Type: application/json; charset=UTF-8
    + Attributes (Operators Get Response)
    

### Download Device Settings [GET /device/{id}/settings]
+ Attributes
    + id: `ffffffff-ffff-ffff-ffff-ffffffffffff` (string, required) - The unique identifier assigned to the device.

+ Response 200 (application/json)
    + Headers
    
            Content-Type: application/json; charset=UTF-8
    + Attributes (Device Settings Response)

### Register a device [POST /device/register]
+ Request (application/json)
    + Attributes (Device Registration Request)
    
+ Response 201 (application/json)
    + Headers
    
            Content-Type: application/json; charset=UTF-8
            Location: /device/ffffffff-ffff-ffff-ffff-ffffffffffff
    + Attributes (Device Registration Response)
    
+ Response 400 (application/json)
    - Response code 400 is returned if there is a problem with any of the request parameters.
    + Attributes (Response 400 Error)
    

# Group Operator

## Operator Management [/operator]

### Operator Session Begin [POST /operator/session/begin]
+ Request (application/json)
    + Attributes (Operator Session Begin Request)
    
+ Response 200 (application/json)
    + Headers
    
            Content-Type: application/json; charset=UTF-8
    + Attributes (Operator Session Begin Response)

+ Response 400 (application/json)
    - Response code 400 is returned if there is a problem with any of the request parameters.
    + Attributes (Response 400 Error)

### Operator Session End [POST /operator/session/end]
+ Request (application/json)
    + Attributes (Operator Session End Request)
    
+ Response 200 (application/json)
    + Headers
    
            Content-Type: application/json; charset=UTF-8
    + Attributes (Operator Session End Response)

+ Response 400 (application/json)
    - Response code 400 is returned if there is a problem with any of the request parameters.
    + Attributes (Response 400 Error)


### Operator PIN Change [PUT /operator/pinchange]
+ Request (application/json)
    + Attributes (Operator PIN Change Request)
    
+ Response 200 (application/json)
    + Headers
    
            Content-Type: application/json; charset=UTF-8
    + Attributes (Operator PIN Change Response)
    
+ Response 400 (application/json)
    - Response code 400 is returned if there is a problem with any of the request parameters.
    + Attributes (Response 400 Error)

### Operator Validate [POST /operator/validate]
+ Request (application/json)
    + Attributes (Operator Validate Request)
    
+ Response 200 (application/json)
    + Headers
    
            Content-Type: application/json; charset=UTF-8
    + Attributes (Operator Validate Response)

+ Response 400 (application/json)
    - Response code 400 is returned if there is a problem with any of the request parameters.
    + Attributes (Response 400 Error)
    

# Group Service

## Service Healthcheck [GET /healthcheck]
    
+ Response 200 (application/json)
    + Headers
    
            Content-Type: application/json; charset=UTF-8
    + Attributes (Healthcheck Response)

# Data Structures


## Base objects section (object) - do not use for documentation
+ x: `************************************************************************************************`


## Balance Board Base (object)
+ BoardPlanId: 1 (string) - The identifier for the board plan.
+ BoardPlanName: MyBoardPlanName (string) - The name for the board plan.
+ BoardPlanPriority: 1 (number) - The priority of the plan.
+ IsActive: true (boolean) - Indicates if the plan is active.
+ RegularGridLeft: 65535 (number)
+ GuestGridLeft: 65535 (number)
+ PeriodLeft: 65535 (number)
+ DayLeft: 65535 (number)
+ WeekLeft: 65535 (number)
+ MonthLeft: 65535 (number)
+ SemesterQuarterLeft: 65535 (number)
+ YearLeft: 65535 (number)
+ GuestTotalLeft: 65535 (number)
+ ExtraLeft: 65535 (number)
+ TransferLeft: 65535 (number)
+ TransferMealsBy: W (string)
+ GuestReset: W (string)
+ ExtraReset: D (string)
+ CashEquivAmount: 8000 (number)
+ LimitPeriodBy: Week (enum)
    + Members
        + Week
        + Month
        + Semester
        + Year

## Balance Event Base (object)
+ EventNumber: 1 (number)
+ Name: My Event (string)
+ IsActive: true (boolean)
+ LimitBy: null (string)
+ RegularAccess (object)
    + AllowedCounts: 100 (number)
    + RemainingCounts: 100 (number)
+ GuestAccess (object)
    + AllowedCounts: 100 (number)
    + RemainingCounts: 100 (number)

## Balance Stored Value Base (object)
+ CustomerId: 6000001 (string, required) - The identifier for the customer.  Can be card number or customer number.
+ TenderId: 1 (string, required) - The identifier for the tender to get a balance on.
+ AvailableBalance: 100 (number) - The available balance in the stored value account.
+ TaxExempt: false (boolean) - Inidcated whether or not the the account is tax exempt.
+ Discounts (array[number]) - A list of 0 or more discount percentages.
+ Surcharges (array[number]) - A list of 0 or more surcharge percentages.

## Board Period Base (object)
+ Period: 1 (number) - Board Period Number.
+ BoardPeriodDay: 1 (number) - Board Period Day.
+ ProfitCenterId: 1 (number) - Profit Center ID.
+ BoardPeriodName: MyPeriodName (string) - Board Period Name.
+ BoardPeriodStartDateTime: `2017-04-23T12:00:00.123` (string) - Board Period Start Date.
+ BoardPeriodStopDateTime: `2017-04-23T13:00:00.321Z` (string) - Board Period Start Date.
+ CePeriodStartDateTime: `` (string) - CE Period Start Date.
+ CePeriodStopDateTime: `` (string) - CE Period Start Date.
+ DateTimeOffset: `-07:00` (string) - The UTC offset of the included DateTime objects.

## Card Format Base (object)
+ CardFormatGuid: `1d158215-58d8-4233-bcd0-9951dfcda780` (string) - Unique identifier (Guid) for the card format.
+ Name: `My Card Format` (string) - The card format name.
+ PrioritySequence: 1 (number) - Order in which the formats should be displayed/processed.
+ SiteCode: `some_site_code` (string) - Site Code on card.
+ SiteCodeStartPosition: 1 (number) - Start position of the site code.
+ SiteCodeStartType: 0 (number) - (0) - Absolute position from the first digit on track 2; (1) - Relative positioning from the first field separator on track 2.
+ SiteCodeLength: 2 (number) - The length of the site code.
+ SiteCodeCheckOnline: false (boolean) - If online, check site code.
+ SiteCodeCheckOffline: false (boolean) - If offline, check site code.
+ IdNumberStartPosition: 0 (number) - The start position of the ID number.
+ IdNumberStartType: 0 (number) - (0) - Absolute position from the first digit on track 2; (1) - Relative positioning from the first field separator on track 2.
+ IdNumberLength: 12 (number) - The length of the Id number.
+ IssueNumberStart: 15 (number) - The position of the issue number.
+ IssueNumberStartType: 0 (number) - Absolute position from the first digit on track 2; (1) - Relative positioning from the first field separator on track 2.
+ IssueNumberLength: 2 (number) - Maximum length of issue number.
+ MinimumDigitsTrack2: 0 (number) - The minimum number of digits on track 2
+ MaximumDigitsTrack2: 22 (number) - The maximum number of digits on track 2

## Operator Base (object)
+ Include Operator Id
+ OperatorNumber: 1 (number) - The number for the operator (used for login purposes).
+ FullName: `bs manager (1,1)` (string) - The full name of the operator.
+ Pin: 1 (string) - The PIN for the operator.
+ IsManager: true (boolean) - True means the operator has manager override privilege.
+ CashDrawer: 1 (number) - The operator`s drawer number.
+ PinRequired: false (boolean) - Is the operator`s pin required for login.
+ PinChangeRequired: false (boolean) - Does the operator have to change their pin.
+ CardNumber: 1234560000000022 (string) - The operator`s card number.
+ IssueNumber: null (string) - The operator`s card issue number.
+ Roles (array[string]) - The list of roles (identified as a list of guids corresponding to role ids) assigned to the operator.

## Operator Second (object)
+ Include Operator Id
+ OperatorNumber: 2 (number) - The number for the operator (used for login purposes).
+ FullName: `Test Operator NOT Manager` (string) - The full name of the operator.
+ Pin: 1234 (string) - The PIN for the operator.
+ IsManager: false (boolean) - True means the operator has manager override privilege.
+ CashDrawer: 1 (number) - The operator`s drawer number.
+ PinRequired: false (boolean) - Is the operator`s pin required for login.
+ PinChangeRequired: false (boolean) - Does the operator have to change their pin.
+ CardNumber: 1234560000000022 (string) - The operator`s card number.
+ IssueNumber: null (string) - The operator`s card issue number.
+ Roles (array[string]) - The list of roles (identified as a list of guids corresponding to role ids) assigned to the operator.

## Operator Third (object)
+ Include Operator Id
+ OperatorNumber: 3 (number) - The number for the operator (used for login purposes).
+ FullName: `Third Operator Manager` (string) - The full name of the operator.
+ Pin: 1234 (string) - The PIN for the operator.
+ IsManager: true (boolean) - True means the operator has manager override privilege.
+ CashDrawer: 1 (number) - The operator`s drawer number.
+ PinRequired: false (boolean) - Is the operator`s pin required for login.
+ PinChangeRequired: false (boolean) - Does the operator have to change their pin.
+ CardNumber: 1234560000000022 (string) - The operator`s card number.
+ IssueNumber: null (string) - The operator`s card issue number.
+ Roles (array[string]) - The list of roles (identified as a list of guids corresponding to role ids) assigned to the operator.

        
## Credential Enumeration (enum)
+ Track2 - Credential origin is from a card swipe of Track2 data.
+ ManualEntry - Credential origin was manually keyed.
+ Email - Credential is an email address.
+ CardNumber - The card number.
+ IssueNumber - The issue number assigned to a card (also requires CardNumber credential to be present).
+ UserGuid - The unigue (Guid) identifier assigned to the customer.
+ IdNumber - The unique identifier assigned to an agent in the system (i.e. Customer, Operator, etc.).

## Credential Requirements Enumeration (enum)
+ CredentialPresent - The credential must be physically present for verification (i.e. Card Swipe, Biometrics, etc.).
+ CredentialNotPresent - The credentail value can be manually entered
+ Number - The unique identifier assigned to an agent in the system (i.e. Customer, Operator, etc.).

## Credential Requirements Enumeration2 (enum)
+ CredentialNotPresent - The credentail value can be manually entered

## Credential Requirements Enumeration3 (enum)
+ Number - The unique identifier assigned to an agent in the system (i.e. Customer, Operator, etc.).

## Credential Base (object)
+ Type: `Track2` (Credential Enumeration) - Enumeration of possible credential values.
+ Value: `0000000001223334444` (string) - The value of the credential. 

## Customer Base (object)
+ CustId: 501 (number) - The customer id that corresponds to the CUST_ID column in the CUSTOMER table.
+ CustNum: 0000000000000000600001 (string) - The customer number that corresponds to the CUSTNUM column in the CUSTOMER table.
+ DefaultCardNum: 0000000000000000600001 (string) - The default card number that corresponds to the DEFAULTCARDNUM column in the CUSTOMER table.
+ FirstName: tbfirstname600001 (string) - The first name of the customer.
+ MiddleName: tbmiddlename600001 (string) - The middle name of the customer.
+ LastName: tblastname600001 (string) - The last name of the customer.
+ Birthdate: null (string) - The birthdate of the customer.
+ Sex: M (string) - Customer Sex (M-Male, F-Female, N-Not Specified).
+ PinNumber: 6001 (number) - The pin number assigned to the customer.
+ IsActive: true (boolean) - Determines if the customer is active.
+ ActiveStartDate: `2012-04-23T18:25:43.511Z` (string) - The date in which the customer becomes active.  A null value means since the beginning of time.
+ ActiveEndDate: `2020-04-23T18:25:43.511Z` (string) - The datetime when the customer will no longer be active.  Value can be null denoting no end date.
+ OpenDateTime: `2012-04-23T18:25:43.511Z` (string) - Date/Time the customer was added to the system.
+ LastModDateTime: `2017-01-30T18:25:43.511Z` (string) - Last Modified Date/Time.
+ LastModUsername: t (string) - Last Modified User Name.
+ DoorExtendedUnlockAllowed: F (string) - Denotes whether or not the customer will have an extended unlock on door devices.

## Customer Identification Requirements Base (object)

## Device Registration Base (object)
+ Name: Sample Slate Device (string, required) - The name of the device.
+ MacAddress: AA:BB:CC:DD:EE:FF (string, required) - The MAC address for the device.
+ SerialNumber: `serial` (string, required) - The Serial Number of the device.
+ Type (Device Type Enumeration, required) - The type of device trying to register.

## Encoded Image (object)
+ Image: `base64encoded string` (string) - The image as a base 64 encoded string.
+ MimeType (enum) - The image type.
    + Members
        + jpeg
        + png
        + gif

## Event Base (object)
+ EventId: 1 (number) - The identifier for the event.
+ EventName: MyEvent (string) - The name of the event.
+ EventNumber: 1 (number) - The number assigned to the event.
+ ScheduleType (Schedule Type Enumeration) - The schedule type (Daily, Weekly, Monthly, Custom).
+ Capacity: 100 (number) - The capacity of the event.
+ EventStartDateTime: `2017-04-23T12:00:00.123` (string) - The start time of the event.
+ EventStopDateTime: `2017-04-23T13:00:00.321Z` (string) - The stop time of the event.
+ DateTimeOffset: `-07:00` (string) - The UTC offset of the included DateTime objects.

## Healthcheck Item Database (object)
+ Name: Database Check - Healthcheck item that verifies connectivity to the Transact Database.
+ Result: Pass - Result of the check (Pass or Fail)
+ Message: Connection successfully established against the database. - Test result message.
+ EventId: 17 - The Event ID that would be used in the event a message is written to the event log.
+ EventCategory: 0 - The Event Category that would be used in the event a message is written to the event log.  0 means success.

## Healthcheck Item BbIS Connect (object)
+ Name: BbIS Service Check - Healthcheck item that verifies connectivity to the BbIS entity.
+ Result: Pass - Result of the check (Pass or Fail)
+ Message: Connection successfully established to BbIS. - Test result message.
+ EventId: 17 - The Event ID that would be used in the event a message is written to the event log.
+ EventCategory: 0 - The Event Category that would be used in the event a message is written to the event log.  0 means success.

## Healthcheck Item OAuth Connect to BbIS (object)
+ Name: OAuth Check - Healthcheck item that verifies the WebApi's service ability to OAuth authenticate against the BbIS service.
+ Result: Pass - Result of the check (Pass or Fail)
+ Message: OAuth negotiation successful against the provided BbIS service. - Test result message.
+ EventId: 17 - The Event ID that would be used in the event a message is written to the event log.
+ EventCategory: 0 - The Event Category that would be used in the event a message is written to the event log.  0 means success.

## Healthcheck Item BbIS Registration (object)
+ Name: Registration Check - Healthcheck item that verifies that the WebApi's service has been registered.
+ Result: Pass - Result of the check (Pass or Fail)
+ Message: Service is properly registered and ready to accept transactions. - Test result message.
+ EventId: 17 - The Event ID that would be used in the event a message is written to the event log.
+ EventCategory: 0 - The Event Category that would be used in the event a message is written to the event log.  0 means success.

## Healthcheck Item Loopback OAuth (object)
+ Name: Loopback OAuth Check - Healthcheck item that verifies that the WebApi's service is ready to accept OAuth requests.
+ Result: Pass - Result of the check (Pass or Fail)
+ Message: Loopback OAuth test was successful. - Test result message.
+ EventId: 17 - The Event ID that would be used in the event a message is written to the event log.
+ EventCategory: 0 - The Event Category that would be used in the event a message is written to the event log.  0 means success.

## Meal Type Base (object)
+ Id: 1 (number) - Board Meal Type Identifier.
+ Name: Meal Type (string) - Meal Type Name.
+ ApplyTo: 0 (number) - Period Number to apply the Board Transaction to.  0 means `Current Period`.

## NameValuePair (object)
+ Key: my_key (string, required) - The key for the pair.
+ Value: my_value (string, required) - The value for the pair.

## Operational Requirements Base (object)
+ CustomerIdentificationRequirement (array[Credential Requirements Enumeration]) - Identification requirements for a customer using the device.
+ OperatorLoginRequirements (array[Credential Requirements Enumeration, Credential Requirements Enumeration2, Credential Requirements Enumeration3 ]) - Specifies the methods that Operators can use to login to the POS.
+ TsopProductVersion: 4.0.0.0 (string) - The product version of Transact OnPremise running on the server.

## Product Base (object)
+ ProductId: 1 (number) - The id of the product.
+ ProductDetailId: 1 (number) - The product detail id.
+ ProductNumber: somenumber (string) - The product number.
+ ProductDescription: somedescription (string) - The description of the product.
+ ProductType(Product Type Enumeration) - The product type.
+ TaxScheduleId: 1 (number) - The id of the tax schedule associated with this product.
+ TaxGroupId: 1 (number) - The id of the tax group this product belongs to.
+ RetailPrice: 1.00 (number) - The retail price of the product.
+ VariablePriceMinimum: 0.01 (number) - The variable minimum price.
+ VariablePriceMaximum: 10.00 (number) - the variable maximum price.
+ ForceReceipt: false (boolean) - If true, a receipt must be printed if this product is part of the transaction.
+ AllowOverride: false (boolean) - Indicates if the product price can be modified by a Discount or Surcharge operation initiated by the operator.
+ DiscountQuantity1: 1 (number) - Threshold at which the DiscountPrice1 should be used for the product price.
+ DiscountPrice1: 0.00 (number) - Price to be used for the product when the quantity of this product in the transaction >= DiscountQuantity1.
+ DiscountQuantity2: 1 (number) - Threshold at which the DiscountPrice2 should be used for the product price.
+ DiscountPrice2: 0.00 (number) - Price to be used for the product when the quantity of this product in the transaction >= DiscountQuantity2.
+ DiscountQuantity3: 1 (number) - Threshold at which the DiscountPrice3 should be used for the product price.
+ DiscountPrice3: 0.00 (number) - Price to be used for the product when the quantity of this product in the transaction >= DiscountQuantity3.
+ LastModified: `2016-04-23T18:25:43.511Z` (string) - DateTime object (apiary can`t do datetime) Last modified date/time (UTC)
+ AllowPolicyDiscount: true (boolean) - Indicates if the product price can be discounted by policy-based discount rule.
+ AllowPolicySurcharge: true (boolean) - Indicates if the product price can be surcharged by policy-based surcharge rule.
+ DateTimeOffset: `-07:00` (string) - The UTC offset of the included DateTime objects.

## Role Base (object)
+ RoleId: `065dfe36-7694-4571-b86c-d9bedacdbf77`(string) - Unique identifier for the role.
+ Rights (array[Rights Enumeration]) - List of rights assigned to the role.

## Stored Value Account Base (object)
+ TypeId: 1 (number) - The identifier for the type of stored value account.
+ Name: MySvAccount (string) - The name for the stored value account.

## Stored Value Account Balance Base
+ SvAccountTypeName: MyAccount (string) - The full name of the stored value account.
+ SvAccountShortName: MyAcNm (string) - The short name of the stored value account.
+ Balance: 1234 (number) - The account balance amount.
+ Credit: 4321 (number) - The account credit amount.

## Tax Schedule Base (object)
+ TaxScheduleId: 1 (number) - The tax schedule id.
+ Name: My Tax Schedule (string) - The name of the tax schedule.
+ TaxAccountId: 1 (number) - The id of the tax account.
+ TaxAccountName: My Tax Account Name (string) - The name of the tax account.
+ TaxExemptQuantityEnabled: false (boolean) - Indicated if the tax exempt quantity is enabled.
+ TaxExemptQuantity: 1 (number) - The tax exempt quantity.
+ TaxableAmountMinimumEnabled: false (boolean) - Indicated if the taxable amount minimum is enabled.
+ TaxableAmountMinimum: 1.00 (number) - The taxable amount minimum value.
+ TaxableAmountMaximumEnabled: false (boolean) - Indicated if the taxable amount maximum is enabled.
+ TaxableAmountMaximum: 1.00 (number) - The taxable amount maximum value.
+ TaxLinkTaxScheduleId: 2 (number) - The linked tax schedule id.
+ TaxLinkTaxTaxes: false (boolean) - Needs explanation.
+ TenderTaxList (array[Tax Tender Base]) - The list of tender taxes.

## Tax Tender Base (object)
+ TenderId: 1 (number) - The tender id.
+ TaxPercent: 0.0998 (number) - Tax percent.  (If 9.98% tax rate, TaxPercent == 0.0998m)

## Tender Base (object)
+ Id: 4 (number) - The identifier of the tender
+ Name: cp cash 1 (string) - The name of the tender.
+ Type: 1 (number) - The type of tender.
+ ShortName: cpcash1tt (string) - The shortened name for the tender.


## Request and Response Objects section do not use for documentation (object)
+ x: `************************************************************************************************`


## Customer Get Response (object)
+ Include Customer Id
+ Customer (Customer Base) - The customer information requested.

## Customer Board Balance Get Response (object)
+ Include Customer Id
+ Include Device Id
+ BoardPlans (array[Balance Board Base]) - The customer board balance requested.

## Customer Credential Verify Request (object)
+ Include Request Id
+ Credentials (array[Credential Base])
    
## Customer Credential Verify Response (object)
+ Include Request Id
+ Include Customer Guid
+ FirstName: tbfirstname600001 (string) - The first name of the customer.
+ LastName: tblastname600001 (string) - The last name of the customer.
+ Birthdate: null (string) - The birthdate of the customer.
+ Email (array[string]) - The email address(es) of the customer.
+ Thumbnail (Encoded Image) - A small visual representation of the image of the customer.

## Customer Stored Value Balance Get Response (object)
+ Include Customer Id
+ Include Device Id
+ StoredValueAccounts (array[Stored Value Account Balance Base]) - The customer board balance requested.

## Operators Get Response (object)
+ Include Device Id
+ Operator (array[Operator Base, Operator Second, Operator Third]) - A list of operators allowed on the device.

## Device Heartbeat Request (object)
+ Include Request Id
+ Include Device Id
+ DateTimeUTC: `2012-04-23T18:25:43.511Z` (string) - (DateTime object) The date and time currently on the device.
+ DateTimeOffset: `-07:00` (string) - The UTC offset of the location the device is currently in.
+ SoftwareVersion: 1.0.0.0 (string) - The current software version installed on the device.
+ Device Type (Device Type Enumeration) - The type of device.

## Device Heartbeat Response (object)
+ Include Request Id
+ DateTimeUTC: `2012-04-23T18:25:43.511Z` (string) - (DateTime object) The date and time of the server.
+ DateTimeOffset: `-07:00` (string) - The UTC offset of the location the server is currently in.
+ SoftwareVersion: 1.0.0.0 (string) - The latest software version available on the server.
+ Updates (array[Update Enumeration]) - The update actions that should be taken by the device.

## Healthcheck Response (object)
+ DateTimeInitiated: `2017-06-23T10:55:16.4309443-07:00` (string) - The time the health check was initiated.
+ DateTimeCompleted: `2017-06-23T10:55:18.1028326-07:00` (string) - The time the health check was completed.
+ HealthcheckItems (array) - List of healthcheck items.
    + (Healthcheck Item Database)
    + (Healthcheck Item BbIS Connect)
    + (Healthcheck Item OAuth Connect to BbIS)
    + (Healthcheck Item BbIS Registration)
    + (Healthcheck Item Loopback OAuth)

## Operator Session Begin Request (object)
+ Include Request Id
+ Include Operator Id
+ Include Device Id
+ Include Session Id
+ DateTimeUTC: `2012-04-23T18:25:43.511Z` (string) - (DateTime object) The date and time that the login occured.
+ DateTimeOffset: `-07:00` (string) - The UTC offset of the location the device is currently in.

## Operator Session Begin Response (object)
+ Include Request Id

## Operator Session End Request (object)
+ Include Request Id
+ Include Operator Id
+ Include Device Id
+ Include Session Id
+ DateTimeUTC: `2012-04-23T18:25:43.511Z` (string) - (DateTime object) The date and time that the logout occured.
+ DateTimeOffset: `-07:00` (string) - The UTC offset of the location the device is currently in.

## Operator Session End Response (object)
+ Include Request Id

## Device Registration Request (object)
+ Include Request Id
+ Include Device Registration Base
    
## Device Registration Response (object)
+ Include Request Id
+ Include Device Id

## Device Settings Response (object)
+ Include Device Id
+ BoardPeriods (array[Board Period Base]) - List of all meal periods.
+ CardFormats (array[Card Format Base]) - List of card formats.
+ Operators (array[Operator Base, Operator Second, Operator Third]) - List of operators allowed to operate the device.
+ Events (array[Event Base]) - List of all events supported by the device.
+ MealTypes (array[Meal Type Base]) - List of all meal types.
+ OperationalRequirements (Operational Requirements Base) - Operator and Customer requirements and product version.
+ Products (array[Product Base]) - List of products for the device.
+ Roles (array[Role Base]) - List of roles that can be assigned to an operator.
+ StoredValueAccounts (array[Stored Value Account Base]) - List of all stored value accounts supported on the device.
+ TaxSchedules (array[Tax Schedule Base]) - List of tax schedules for the device.
+ Tenders (array[Tender Base]) - List of tenders for the device.
+ Properties (array[NameValuePair]) - Properties bag for the device.

## Operator PIN Change Request (object)
+ Include Request Id
+ Include Operator Id
+ OldPin: 1234 (string) - The old (current) PIN.
+ NewPin: 4321 (string) - The new PIN.

## Operator PIN Change Response (object)
+ Include Request Id

## Operator Validate Request (object)
+ Include Request Id
+ Include Device Id
+ Include Credentials Array

## Operator Validate Response (object)
+ Include Request Id
+ Include Operator Id
+ Include Session Id


## Common Base Types Section (object) - do not use for documentation
+ x: `**********************************************************************************`

## Customer Guid (object)
+ CustomerGuid: `6492868F-3891-42AE-8C02-D9A5C8D5A321` (string) - The unique identifier for the customer (GUID).

## Customer Id (object)
+ CustomerId: `6492868F-3891-42AE-8C02-D9A5C8D5A321` (string) - The unique identifier for the customer (GUID).

## Device Id (object)
+ DeviceId: `15ADD661-F878-42E5-A283-D88322CBBA4F` (string) - The unique identifier for the device (GUID).

## Operator Id (object)
+ OperatorId: `8D9CC985-ABDC-4851-BCEB-520B877031C8` (string) - The unique identifier for the operator (GUID).

## Request Id (object)
+ RequestId: `5196CD76-D1D6-4E4B-A8FF-949113496F96` (string) - The unique identifier of the request (GUID).

## Operator Id2 (object)
+ OperatorId: `8D9CC985-ABDC-4851-BCEB-520B877031C2` (string) - The unique identifier for the operator (GUID).

## Operator Id3 (object)
+ OperatorId: `8D9CC985-ABDC-4851-BCEB-520B877031C1` (string) - The unique identifier for the operator (GUID).



## Session Id (object)
+ SessionId: `56653617-4853-4651-9C04-069E71C5075C` (string) - The unique identifier for the session (GUID).

## Credentials Array (object)
+ Credentials (array[Credential Base]) - List of credentials.

## Customer Identification Requirement (enum)
+ CustomerNumber - Use a customer number to validate a customer.
+ CardNumberAndSwipe - Use a card number manually or swiped to validate a customer.
+ Any - Any other form of idenfication (provided in this enumeration) is considered valid.

## Device Type Enumeration (enum)
+ AT3000 - Numerical value = 1.  AT3000 style transaction terminal.
+ MF4100 - Numerical value = 2.  MF4100 style transaction terminal.
+ PR5000 - Numerical value = 3.  PR5000/Slate style transaciton terminal.

## Operator Session Begin Methods (enum)
+ PickListAndOperatorNumber - Operator can login by selecting their name from a list or provide their operator number and a PIN.
+ OperatorCardSwipeOrManualEntry - Operator can provide their card number manually or via a swipe.
+ Any - Any other form of idenfication (provided in this enumeration) is considered valid.

## Product Type Enumeration (enum)
+ Standard - Standard product.
+ Weighed - Product must be weighed.
+ WeighedZeroTare - Product must be weighed (zero tare).
+ PromptForCount - The quantity of this product must be specified at the time of purchase.
+ PromptForPrice - The price of this product must be entered at the time of purchase.

## Rights Enumeration (enum)
+ Board_Apply
+ Board_Reverse
+ BoardCashEquiv_Return
+ BoardCashEquiv_Sale
+ CardUtility_Encode
+ CardUtility_View
+ Cash_Return
+ Cash_Sale
+ Check_Return
+ Check_Sale
+ CreditCard_Return
+ CreditCard_Sale
+ PosPriv_AgeVerify
+ PosPriv_AutoBoard
+ PosPriv_AutoEvent
+ PosPriv_AutonomousBoard
+ PosPriv_AutonomousEvent
+ PosPriv_BarcodeNumber
+ PosPriv_Board
+ PosPriv_BoardBalanceCheck
+ PosPriv_BoardCashEquiv
+ PosPriv_BoardCount
+ PosPriv_CancelTransaction
+ PosPriv_CardUtility
+ PosPriv_Cash
+ PosPriv_Check
+ PosPriv_CheckAttendance
+ PosPriv_CreditCard
+ PosPriv_DepartmentCard
+ PosPriv_Discount1
+ PosPriv_Discount2
+ PosPriv_Discount3
+ PosPriv_Discount4
+ PosPriv_EventAccess
+ PosPriv_EventReverse
+ PosPriv_EventStatus
+ PosPriv_EventSwipeOut
+ PosPriv_FreezeCard
+ PosPriv_KeypadEntry
+ PosPriv_LastTransaction
+ PosPriv_Logout
+ PosPriv_MenuPage1
+ PosPriv_MenuPage2
+ PosPriv_MenuPage3
+ PosPriv_MenuPage4
+ PosPriv_NoSale
+ PosPriv_PosMessage
+ PosPriv_PriceCheck
+ PosPriv_PrintReport
+ PosPriv_Return
+ PosPriv_SelectMenu
+ PosPriv_StoredValAcctBalCheck
+ PosPriv_StoredValueCharge
+ PosPriv_StoredValueDeposit
+ PosPriv_Subtotal
+ PosPriv_Surcharge1
+ PosPriv_Surcharge2
+ PosPriv_Tax1
+ PosPriv_Tax2
+ PosPriv_TimesX
+ PosPriv_TogglePrinter
+ PosPriv_TransactionComment
+ PosPriv_ViewJournalTape
+ PosPriv_VoidItem
+ PosPriv_WipeScreen
+ PrintReport_PosDailyAudit
+ PrintReport_ProftCntrDailyAudt
+ PrintReport_SessionDrawerAudit
+ StoredValue_Deposit
+ StoredValue_Return
+ StoredValue_Sale
+ StoredValue_Transfer
+ WsPriv_Board
+ WsPriv_BoardCashEquiv
+ WsPriv_Cash
+ WsPriv_Check
+ WsPriv_CreditCard
+ WsPriv_StoredValue


## Schedule Type Enumeration (enum)
+ Daily
+ Weekly
+ Monthly
+ Custom

## Update Enumeration (enum)
+ Settings - Download and apply all device settings.



## Response Codes (object) - do not use in documentation
+ x: `********************************************************************************************`

## Response 400 Error
+ error: `One or more of the request parameters were incorrect.` (enum)
    + Members
        + `One or more of the request parameters were incorrect.` (string)
        + `Parameter {param} was invalid.` (string)